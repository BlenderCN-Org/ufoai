/**
 * @brief Unittest for setters
 * Move it into the ui ufo script directory (/base/ufos/ui/), run the game, and run the command "mn_push unittest_setter"
 * Every thing must be green and it must not print any text or warning into the console.
 */

window unittest_setter
{
	{
		pos "100 100"
		size "340 400"
		dragbutton	true
		closebutton	true
		string		"_Unittest setter"
		bgcolor		"0 0 0 1"
	}

	string cvarTitle {
		pos		"20 40"
		string	"cvar"
	}

	string testCvar1 {
		pos		"20 60"
		string	"t1"
	}

	string testCvar2 {
		pos		"20 80"
		string	"t2"
	}

	string testCvar3 {
		pos		"20 100"
		string	"t3"
	}

	string testCvar4 {
		pos		"20 120"
		string	"t4"
	}

	string testCvar5 {
		pos		"20 140"
		string	"t5"
	}

	string testCvar6 {
		pos		"20 160"
		string	"t6"
	}

	string testCvar7 {
		pos		"20 180"
		string	"t7"
	}

	string testCvar8 {
		pos		"20 200"
		string	"t8"
	}

	string testCvar9 {
		pos		"20 220"
		string	"t9"
	}

	string testCvar10 {
		pos		"20 240"
		string	"t10"
	}

	string testCvar11 {
		pos		"20 260"
		string	"t11"
	}

	string testCvar12 {
		pos		"20 280"
		string	"t12"
	}

	string testCvar13 {
		pos		"20 300"
		string	"t13"
	}

	string testCvar14 {
		pos		"20 320"
		string	"t14"
	}

	string testCvar15 {
		pos		"20 340"
		string	"t15"
	}

	string testCvar16 {
		pos		"20 360"
		string	"t16"
	}

	string propertyTitle {
		pos		"80 40"
		string	"prop"
	}

	string testProperty1 {
		pos		"80 60"
		string	"t1"
	}

	string testProperty2 {
		pos		"80 80"
		string	"t2"
	}

	string testProperty3 {
		pos		"80 100"
		string	"t3"
	}

	string testProperty4 {
		pos		"80 120"
		string	"t4"
	}

	string testProperty5 {
		pos		"80 140"
		string	"t5"
	}

	spinner testNodeFoo {
		current		"*cvar:test_nodefoo"
		min			0
		max			16
		invis		true
		disabled	false
	}

	confunc testCvarInjection {
		*cvar:test = <1>
		if ( *cvar:test == 1 ) { *testCvar11@color "0 1 0 1" }
		else { *testCvar11@color "1 0 0 1" }

		*cvar:test<1> = 1
		if ( *cvar:test1 == 1 ) { *testCvar12@color "0 1 0 1" }
		else { *testCvar12@color "1 0 0 1" }

		*cvar:test = <3>
		if ( *cvar:test eq "abab" ) { *testCvar13@color "0 1 0 1" }
		else { *testCvar13@color "1 0 0 1" }

		*cvar:test = mm<3>mm
		if ( *cvar:test eq "mmababmm" ) { *testCvar14@color "0 1 0 1" }
		else { *testCvar14@color "1 0 0 1" }
		
		*cvar:test = ( <1> + 1 )
		if ( *cvar:test == 2 ) { *testCvar15@color "0 1 0 1" }
		else { *testCvar15@color "1 0 0 1" }
		
		*cvar:test = ( ( <1> + *cvar:test<1> ) + <2> )
		if ( *cvar:test == 4 ) { *testCvar16@color "0 1 0 1" }
		else { *testCvar16@color "1 0 0 1" }
	}

	func testCvar {
		*cvar:test = "0"
		if ( *cvar:test == 0 ) { *testCvar1@color "0 1 0 1" }
		else { *testCvar1@color "1 0 0 1" }
		if ( *cvar:test != 1 ) { *testCvar2@color "0 1 0 1" }
		else { *testCvar2@color "1 0 0 1" }
		
		*cvar:test = "abab"
		if ( *cvar:test eq "abab" ) { *testCvar3@color "0 1 0 1" }
		else { *testCvar3@color "1 0 0 1" }
		if ( *cvar:test ne "ababa" ) { *testCvar4@color "0 1 0 1" }
		else { *testCvar4@color "1 0 0 1" }

		*cvar:test = ( 1 + 1 )
		if ( *cvar:test == 2 ) { *testCvar5@color "0 1 0 1" }
		else { *testCvar5@color "1 0 0 1" }

		*cvar:test = ( 1 + *cvar:test )
		if ( *cvar:test == 3 ) { *testCvar6@color "0 1 0 1" }
		else { *testCvar6@color "1 0 0 1" }
		
		*cvar:test = ( 1 + *node:root.testNodeFoo@max )
		if ( *cvar:test == 17 ) { *testCvar7@color "0 1 0 1" }
		else { *testCvar7@color "1 0 0 1" }

		*cvar:test = ( 1 + *node:root.testNodeFoo@min )
		if ( *cvar:test == 1 ) { *testCvar8@color "0 1 0 1" }
		else { *testCvar8@color "1 0 0 1" }

		*cvar:test = ( *node:root.testNodeFoo@max + *cvar:test )
		if ( *cvar:test == 17 ) { *testCvar9@color "0 1 0 1" }
		else { *testCvar9@color "1 0 0 1" }

		*cvar:test = ( ( *cvar:test - 17 ) + ( *node:root.testNodeFoo@max * 2 ) )
		if ( *cvar:test == 32 ) { *testCvar10@color "0 1 0 1" }
		else { *testCvar10@color "1 0 0 1" }

		cmd "testCvarInjection 1 2 abab"
		cmd "del test"
		cmd "del test1"
	}
	
	func testProperty {
	
	}

	func onInit {
		call testCvar
		call testProperty
	}

	func onClose {
	}

}
