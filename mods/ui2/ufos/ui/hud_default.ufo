// ======================
// NEW HUD UNNAMED SO FAR
// ======================

/*
 * @TODO
 * - No ammo models/bar because cvars don't exist
 * - Some way to see which ammo is loaded
 * - Currently selected firemode name on weapon panel
 * - Second weapon panel
 * -- Reload button disappears when full, but it would
 *    be great to have full/not-full/empty icons
 * -- Need to figure out grenades, and sometimes pistols
 *    they say can't be fired two-handed, and reload btn
 *    doesn't appear. Try to figure out when this happens.
 * - Fire weapon seems off: sometimes no line of fire is drawn
 * - Soldier models don't always update
 * - Inventory/Stats windows
 * -- Turn it into panel so i can use next/prev soldier confuncs
 * - Chat windows, and other MP-specific needs
 * - Message panel (log lines use old style)
 * - Show keys
 * - Level selection needs up/down arrows
 * - Tooltips: look for UI_DrawTooltip
 */


//window hud_unnamed extends hud
window hud_default extends hud
{
	{
		fill		true
		starlayout	true
		noticepos	"256 10"
	}

	func onScriptLoaded {
		// Add the window to the list of HUDs
		cmd "add_hud_name <path:root> \"_Default\""
	}

	func showinventory
	{
		cmd "ui_push hudinv;"
	}

	battlescape render
	{
		pos			"0 0"
		size		"1024 768"
		align		LAYOUTALIGN_FILL
	}

	// ==============
	// SOLDIERS PANEL
	// ==============
	panel soldier
	{
		{
			pos			"0 418"
			size		"1024 220"
			align		LAYOUTALIGN_BOTTOMLEFT
			ghost		true
		}

		panel soldier_opts
		{
			{
				pos			"10 130"
				size		"780 76"
//				bgcolor		"0.38 0.48 0.36 0.5"
				bgcolor		"0 0.15 0.1 0.7"
				bordercolor	"0.58 0.81 0.758 0.7"
				border		"2"
				onMouseEnter	{
					*node:this@bgcolor = "0 0.21 0.158 0.7"
				}
				onMouseLeave	{
					*node:this@bgcolor = "0 0.15 0.1 0.7"
				}
			}

			// Soldier name
			string sel_soldier_name
			{
				string			*cvar:mn_name
				pos				"105 6"
				size			"300 15"
				font			"f_small_bold"
				color			"0.56 0.81 0.76 1"
				longlines		LONGLINES_CHOP
				contentalign	ALIGN_CL
				ghost			true
			}

			// Soldier status bars
			panel soldier_status
			{
				{
					pos		"105 18"
					size	"355 60" // 420
					ghost	true
				}

				// Health bar
				texture health_bg
				{
					pos			"0 5"
					size		"300 10"
					src			"ui/bar_bg"
					ghost		true
				}
				bar health
				{
					pos			"0 5"
					size		"300 10"
					color		".1875 .65625 .164 1"
					current		*cvar:mn_hp
					max			*cvar:mn_hpmax
					disabled	true
					nohover		true
				}
				string health_count
				{
					string			*cvar:mn_hp
					pos				"305 4"
					size			"30	12"
					font			"f_verysmall_bold"
					color			"0.56 0.81 0.76 0.5"
					contentalign	ALIGN_CL
				}
				button health_icon
				{
					icon			"icons/healthsml0"
					pos				"335 0"
					size			"18	19"
				}

				// Time units bar
				texture tu_bg
				{
					pos			"0 22"
					size		"300 10"
					src			"ui/bar_bg"
					ghost		true
				}
				bar tu
				{
					pos			"0 22"
					size		"300 10"
					color		".582 .808 .758 1"
					current		*cvar:mn_tu
					max			*cvar:mn_tumax
					disabled	true
					nohover		true
				}
				string tu_count
				{
					string			*cvar:mn_tu
					pos				"305 21"
					size			"30	12"
					font			"f_verysmall_bold"
					color			"0.56 0.81 0.76 0.5"
					contentalign	ALIGN_CL
				}
				button tu_icon
				{
					icon			"icons/tusml0"
					pos				"335 17"
					size			"18	19"
				}

				// Morale bar
				texture morale_bg
				{
					pos			"0 39"
					size		"300 10"
					src			"ui/bar_bg"
					ghost		true
				}
				bar morale
				{
					pos			"0 39"
					size		"300 10"
					color		".825 .92 .437 1"
					current		*cvar:mn_morale
					max			*cvar:mn_moralemax
					disabled	true
					nohover		true
				}
				string morale_count
				{
					string			*cvar:mn_morale
					pos				"305 38"
					size			"30	12"
					font			"f_verysmall_bold"
					color			"0.56 0.81 0.76 0.5"
					contentalign	ALIGN_CL
				}
				button morale_icon
				{
					icon			"icons/moralesml0"
					pos				"335 34"
					size			"18	19"
				}
			}

			// Soldier buttons
			// @TODO: inventory button should stay "on" when window is open
			// @TODO: stats button should stay "on" when window is open
			panel soldier_buttons
			{
				{
					pos			"470 13"
					size		"310 50"
					ghost		true
				}

				// Inventory button
				CircleBtn inventory_bg
				{
					{
						pos			"0 0"
					}

					button icon
					{
						icon		"icons/inv0"
						background	"icons/circle0"
						pos			"0 0"
						size		"48 48"
						tooltip		"_Equipment"
						onClick		{ cmd "toggle_button inventory_bg inv;ui_push inv_stats_hud;" }
						onMouseEnter	{ *node:this@icon = "icons/inv" }
						onMouseLeave	{ *node:this@icon = "icons/inv0" }
					}
				}

				// Soldier stats button
				CircleBtn stats_bg
				{
					{
						pos			"55 0"
					}

					button icon
					{
						icon		"icons/stats0"
						background	"icons/circle0"
						pos			"0 0"
						size		"48 48"
						tooltip		"_Stats"
						onClick		{ cmd "toggle_button stats_bg stats;ui_push inv_stats_hud;" }
						onMouseEnter	{ *node:this@icon = "icons/stats" }
						onMouseLeave	{ *node:this@icon = "icons/stats0"	}
					}
				}

				// Headgear button
				CircleBtn headgear_bg
				{
					{
						pos		"110 0"
					}

					button icon
					{
						icon		"icons/headgear"
						background	"icons/circle"
						pos			"0 0"
						size		"48 48"
						onClick	{
							cmd "actor_useheadgear;"
							*node:this@icon = "icons/headgear0"
							*node:this@background = "icons/circle0"
						}
					}

					CircleBtnDisabled headgear_d
					{
						pos			"0 0"
					}

					confunc deselect_headgear
					{
						*node:parent.icon@icon = "icons/headgear"
						*node:parent.icon@background = "icons/circle"
						*node:parent.headgear_d@invis = true
					}
					confunc disable_headgear
					{
						*node:parent.headgear_d@invis = false
					}
				}



				// Reaction fire button
				CircleBtn reaction
				{
					{
						pos			"165 0"
					}

					button icon_on
					{
						icon		"icons/reaction2"
						background	"icons/circle"
						pos			"0 0"
						size		"48 48"
						invis		true
						onClick		{ cmd "hud_togglereaction;" }
					}

					button icon_single
					{
						icon		"icons/reaction1"
						background	"icons/circle"
						pos			"0 0"
						size		"48 48"
						onClick		{ cmd "hud_togglereaction;" }
					}

					button icon_off
					{
						icon		"icons/reaction0"
						background	"icons/circle"
						pos			"0 0"
						size		"48 48"
						onClick		{ cmd "hud_togglereaction;" }
					}

					// Disable icon over reaction button
					button reaction_d
					{
						pos			"0 0"
						size		"48 48"
						icon		"icons/circle_disabled0"
						invis		true
					}
				}

				// Stand button when not selected
				CircleBtn stand_off
				{
					{
						pos			"220 0"
					}

					button icon
					{
						icon		"icons/stand0"
						background	"icons/circle0"
						pos			"0 0"
						size		"48 48"
						onClick		{ cmd "actor_standcrouch;" }
						onMouseEnter	{ *node:this@icon = "icons/stand" }
						onMouseLeave	{ *node:this@icon = "icons/stand0"	}
					}
				}

				// Crouch button when not selected
				CircleBtn crouch_off
				{
					{
						pos			"250 0"
					}

					button icon
					{
						icon		"icons/crouch0"
						background	"icons/circle0"
						pos			"0 0"
						size		"48 48"
						onClick		{ cmd "actor_standcrouch;" }
						onMouseEnter	{ *node:this@icon = "icons/crouch" }
						onMouseLeave	{ *node:this@icon = "icons/crouch0"	}
					}
				}

				// Crouch button when selected
				CircleBtn crouch
				{
					{
						pos			"250 0"
						invis		true
					}

					button icon
					{
						icon		"icons/crouch"
						background	"icons/circle"
						pos			"0 0"
						size		"48 48"
						ghost		true
					}
				}

				// Disable icon over crouch button
				button crouch_d
				{
					pos			"250 0"
					size		"48 48"
					icon		"icons/circle_disabled0"
					invis		true
				}

				// Stand button when selected
				CircleBtn stand
				{
					{
						pos			"220 0"
						invis		false
					}

					button icon
					{
						icon		"icons/stand"
						background	"icons/circle"
						pos			"0 0"
						size		"48 48"
						ghost		true
					}
				}

				// Disable icon over stand button
				button stand_d
				{
					pos			"220 0"
					size		"48 48"
					icon		"icons/circle_disabled0"
					invis		true
				}

				// Sets the proper display for the stand/crouch buttons
				confunc deselect_stand
				{
					*node:parent.stand@invis = false
					*node:parent.crouch@invis = true
					*node:parent.stand_d@invis = true
					*node:parent.crouch_d@invis = true
				}
				confunc deselect_crouch
				{
					*node:parent.stand@invis = true
					*node:parent.crouch@invis = false
					*node:parent.stand_d@invis = true
					*node:parent.crouch_d@invis = true
				}
				// Disables the stand/crouch buttons when no TUs remain
				confunc disable_stand
				{
					*node:parent.stand@invis = false
					*node:parent.crouch@invis = false
					*node:parent.stand_d@invis = false
					*node:parent.crouch_d@invis = false
				}
				confunc disable_crouch
				{
					*node:parent.stand@invis = false
					*node:parent.crouch@invis = false
					*node:parent.stand_d@invis = false
					*node:parent.crouch_d@invis = false
				}
			}
		}

		// Right-hand weapon panel
		// @TODO implement firemode selection
		// @TODO add button to show left-hand weapon panel
		panel weapon
		{
			{
				pos			"800 130"
				size		"206 76"
//				bgcolor		"0.38 0.48 0.36 0.5"
				bgcolor		"0 0.15 0.1 0.7"
				bordercolor	"0.58 0.81 0.758 0.7"
				border		"2"
				onClick			{ cmd "hud_fireweapon r 0;" }
				onMouseEnter	{ *node:this@bgcolor = "0 0.21 0.158 0.7" }
				onMouseLeave	{ *node:this@bgcolor = "0 0.15 0.1 0.7"	}
			}
			container right
			{
				pos		"10 10"
			}
			container left
			{
				invis	true
				pos		"10 10"
			}
			/*
			string fmode_label
			{
				string 			*cvar:fm_selected
				pos				"5 60"
				size			"196 10"
				font			"f_small_bold"
				color			"0.58 0.81 0.758 1"
				contentalign	ALIGN_CR
				longlines		LONGLINES_CHOP
				ghost			true
			}
			*/
			button fire_r
			{
				pos		"5 5"
				size	"35 35"
				invis	false
				icon	"icons/fire0"
				onClick			{ cmd "ui_push_dropdown firemode_right.anchor LAYOUTALIGN_BOTTOMLEFT hud_default.soldier.weapon LAYOUTALIGN_TOPLEFT;" }
				onMouseEnter	{ *node:this@icon = "icons/fire" }
				onMouseLeave	{ *node:this@icon = "icons/fire0" }
			}
			button fire_l
			{
				pos		"5 5"
				size	"35 35"
				invis	true
				icon	"icons/fire0"
				onClick			{ cmd "ui_push_dropdown firemode_left.anchor LAYOUTALIGN_BOTTOMLEFT hud_default.soldier.weapon LAYOUTALIGN_TOPLEFT;" }
				onMouseEnter	{ *node:this@icon = "icons/fire" }
				onMouseLeave	{ *node:this@icon = "icons/fire0" }
			}
			button reload_r
			{
				pos				"173 5"
				size			"28 23"
				invis			false
				icon			"icons/reload0"
				onMouseEnter	{
					*node:this@icon = "icons/reload"
					cmd "hud_remainingtus reload_r 1;"
					}
				onMouseLeave	{
					*node:this@icon = "icons/reload0"
					cmd "hud_remainingtus reload_r 1;"
					}
				onClick			{ cmd "hud_reloadright;" }
			}
			button reload_r_disabled
			{
				pos				"173 5"
				size			"28 23"
				invis			true
				icon			"icons/reload_disabled"
				onClick			{ cmd "hud_reloadright;" }
			}
			button reload_l
			{
				pos				"173 5"
				size			"28 23"
				invis			true
				icon			"icons/reload0"
				onMouseEnter	{
					*node:this@icon = "icons/reload"
					cmd "hud_remainingtus reload_l 1;"
					}
				onMouseLeave	{
					*node:this@icon = "icons/reload0"
					cmd "hud_remainingtus reload_l 1;"
					}
				onClick			{ cmd "hud_reloadleft;" }
			}
			button reload_l_disabled
			{
				pos				"173 5"
				size			"28 23"
				invis			true
				icon			"icons/reload_disabled"
				onClick			{ cmd "hud_reloadleft;" }
			}
			string ammo_count
			{
				string			*cvar:mn_ammoright
				pos				"130 18"
				size			"40 10"
				font			"f_small_bold"
				color			"0.58 0.81 0.758 1"
				contentalign	ALIGN_CR
				ghost			true
			}
			model oweapon
			{
				src			*cvar:mn_lweapon
				angles		"-15 170 90"
				scale		"1.8 1.8 1.8"
				tooltip		"_View other hand"
				pos			"130 33"
				size 		"72 39"
				bgcolor			"0 0.1 0 0.5"
				border			"2"
				bordercolor		"0.527 0.6 0.21 1"
				onMouseEnter	{
					*node:this@bgcolor = "0 0.1 0 0.9"
					*node:this@bordercolor = "0.824 0.917 0.437 1"
					}
				onMouseLeave	{
					*node:this@bgcolor = "0 0.1 0 0.5"
					*node:this@bordercolor = "0.527 0.6 0.21 1"
					}
				onClick			{ cmd "switchhands;" }
			}
			// Displays oweapon only if another weapon exists
			confunc show_oweapon
			{
				if (*cvar:sldcurhand eq "r") {
					if (*cvar:mn_lweapon eq "") {
						*node:parent.oweapon@invis = true
					} else {
						*node:parent.oweapon@invis = false
					}
				} else {
					if (*cvar:mn_rweapon eq "") {
						*node:parent.oweapon@invis = true
					} else {
						*node:parent.oweapon@invis = false
					}
				}
			}

			confunc switchhands
			{
				if (*cvar:sldcurhand eq "r") {
					*cvar:sldcurhand = "l"
					*node:parent.right@invis = true
					*node:parent.left@invis = false
					*node:parent.fire_r@invis = true
					*node:parent.fire_l@invis = false
					*node:parent.reload_r@invis = true
					*node:parent.reload_r_disabled@invis = true
//					*node:parent.reload_l@invis = false
					*node:parent.oweapon@src = *cvar:mn_rweapon
					*node:parent.ammo_count@string = *cvar:mn_ammoleft
				} else {
					*cvar:sldcurhand = "r"
					*node:parent.right@invis = false
					*node:parent.left@invis = true
					*node:parent.fire_r@invis = false
					*node:parent.fire_l@invis = true
//					*node:parent.reload_r@invis = false
					*node:parent.reload_l@invis = true
					*node:parent.reload_l_disabled@invis = true
					*node:parent.oweapon@src = *cvar:mn_lweapon
					*node:parent.ammo_count@string = *cvar:mn_ammoright
				}
				cmd "show_oweapon;"
			}
			confunc deselect_primaryleft
			{
				*node:parent.fire_l@invis = false
			}
			confunc deselect_primaryright
			{
				*node:parent.fire_r@invis = false
			}
			confunc deselect_reloadleft
			{
				if (*cvar:sldcurhand eq "l") {
					*node:parent.reload_l@invis = false
					*node:parent.reload_l_disabled@invis = true
				}
			}
			confunc deselect_reloadright
			{
				if (*cvar:sldcurhand eq "r") {
					*node:parent.reload_r@invis = false
					*node:parent.reload_r_disabled@invis = true
				}
			}
			confunc disable_primaryleft { *node:parent.fire_l@invis = true }
			confunc disable_primaryright { *node:parent.fire_r@invis = true }
			confunc disable_reloadleft
			{
				if (*cvar:sldcurhand eq "l") {
					*node:parent.reload_l@invis = true
					*node:parent.reload_l_disabled@invis = false
				}
			}
			confunc disable_reloadright
			{
				if (*cvar:sldcurhand eq "r") {
					*node:parent.reload_r@invis = true
					*node:parent.reload_r_disabled@invis = false
				}
			}
		}

		// Soldier selection
		panel squad
		{
			{
				pos			"105 56"
				size		"555 68"
				invis		false
				ghost		true
			}
			button squadtoggle
			{
				icon		"icons/windowprev"
				tooltip		"_Hide squad"
				pos			"10 0"
				size		"18 18"
				onClick			{
					*node:root.soldier.squadtoggle@invis = false
					*node:parent@invis = true
				}
			}
			button health_btn
			{
				pos		"34 0"
				size	"18 19"
				icon	"icons/healthsml"
				onMouseEnter	{ *node:this@icon = "icons/healthsml" }
				onMouseLeave	{ cmd "squad_hoveroff health;" }
				onClick			{ cmd "sel_squad_panel health;" }
			}
			button tu_btn
			{
				pos		"54 0"
				size	"18 19"
				icon	"icons/tusml0"
				onMouseEnter	{ *node:this@icon = "icons/tusml" }
				onMouseLeave	{ cmd "squad_hoveroff tu;" }
				onClick			{ cmd "sel_squad_panel tu;" }
			}
			button morale_btn
			{
				pos		"74 0"
				size	"18 19"
				icon	"icons/moralesml0"
				onMouseEnter	{ *node:this@icon = "icons/moralesml" }
				onMouseLeave	{ cmd "squad_hoveroff morale;" }
				onClick			{ cmd "sel_squad_panel morale;" }
			}

			// Select which attribute to show on squad panel
			// param1 = attribute
			confunc sel_squad_panel
			{
				// Set a cvar with the currently selected option
				*cvar:squad_bar = <1>

				// Remove any selected buttons
				*node:parent.health_btn@icon = "icons/healthsml0"
				*node:parent.tu_btn@icon = "icons/tusml0"
				*node:parent.morale_btn@icon = "icons/moralesml0"

				// Update the bars with the new selection and highlight
				// the correct button
				*cvar:i = 0;
				if (param1 eq "health") {
					*node:parent.health_btn@icon = "icons/healthsml"
					while ( *cvar:i < 8 ) {
						*node:parent.sld<cvar:i>.health@invis = false
						*node:parent.sld<cvar:i>.tu@invis = true
						*node:parent.sld<cvar:i>.morale@invis = true
						*cvar:i = ( *cvar:i + 1 )
					}
				} elif (param1 eq "tu") {
					*node:parent.tu_btn@icon = "icons/tusml"
					while ( *cvar:i < 8 ) {
						*node:parent.sld<cvar:i>.health@invis = true
						*node:parent.sld<cvar:i>.tu@invis = false
						*node:parent.sld<cvar:i>.morale@invis = true
						*cvar:i = ( *cvar:i + 1 )
					}
				} else {
					*node:parent.morale_btn@icon = "icons/moralesml"
					while ( *cvar:i < 8 ) {
						*node:parent.sld<cvar:i>.health@invis = true
						*node:parent.sld<cvar:i>.tu@invis = true
						*node:parent.sld<cvar:i>.morale@invis = false
						*cvar:i = ( *cvar:i + 1 )
					}
				}
				delete *cvar:i
			}

			// Stop mouseover effect from turning off the button
			// selecting which attribute is display in soldier squad panel
			// param1 = attribute to check
			confunc squad_hoveroff
			{
				if (*cvar:squad_bar ne param1) {
					*node:parent.<1>_btn@icon = "icons/<1>sml0"
				}
			}

			// Soldiers
			SoldierSelect sld0
			{
				pos "12 22"
			}
			SoldierSelect sld1
			{
				pos "58 22"
			}
			SoldierSelect sld2
			{
				pos "104 22"
			}
			SoldierSelect sld3
			{
				pos "150 22"
			}
			SoldierSelect sld4
			{
				pos "196 22"
			}
			SoldierSelect sld5
			{
				pos "242 22"
			}
			SoldierSelect sld6
			{
				pos "288 22"
			}
			SoldierSelect sld7
			{
				pos "334 22"
			}
		}
		// Squad panel toggle button
		button squadtoggle
		{
			icon		"icons/windownext"
			tooltip		"_Show squad"
			pos			"115 106"
			size		"18 18"
			invis		true
			onClick			{
				*node:parent.squad@invis = false
				*node:this@invis = true
			}
		}

		// Soldier model
		model sel_soldier_model
		{
			{
				src			*cvar:mn_body
				skin		*cvar:mn_body_skin
				anim		*cvar:mn_anim
				angles		"0 80 90"
				pos			"-20 0"
				size		"160 220"
				scale		"5 5 5"
				ghost		true
			}
			model sel_soldier_head
			{
				src			*cvar:mn_head
				skin		*cvar:mn_head_skin
				tag			"tag_head"
			}
			model sel_soldier_rweapon
			{
				src			*cvar:mn_rweapon
				tag			"tag_rweapon"
			}
			model sel_soldier_lweapon
			{
				src			*cvar:mn_lweapon
				tag			"tag_lweapon"
			}
		}
	}

	// Alien and civilian counts; Level selection
	panel battle_info
	{
		{
			pos			"0 0"
			size		"512 50"
			align		LAYOUTALIGN_TOPLEFT
			ghost		true
		}
		panel alien_count
		{
			{
				pos			"10 10"
				size		"80 25"
				ghost		true
			}
			button alienhead
			{
				pos		"5 3"
				size	"17 19"
				icon	"icons/alienhead"
				tooltip	"_Jump to alien"
				onClick	{ cmd "nextalien;" }
			}
			string aliencount
			{
				string			*cvar:mn_numaliensspotted
				pos				"27 2"
				size			"50 25"
				font			"f_normal_bold"
				color			"0.56 0.81 0.76 1"
				longlines		LONGLINES_CHOP
				contentalign	ALIGN_CL
				ghost			true
			}
		}
		/* @TODO: add civilian count when we have a cvar
		panel civ_count
		{
			{
				pos			"10 40"
				size		"100 25"
				ghost		true
			}
			button civhead
			{
				pos		"5 3"
				size	"17 19"
				icon	"icons/civhead"
				tooltip	"_Jump to civilian"
			}
			string civcount
			{
				string			"_*"
				pos				"27 0"
				size			"50 25"
				font			"f_normal_bold"
				color			"0.56 0.81 0.76 1"
				longlines		LONGLINES_CHOP
				contentalign	ALIGN_CL
				ghost			true
			}
		}
		*/
		// @TODO: Make up/down arrows for levels
		panel level
		{
			{
				pos			"90 10"
				size		"100 40"
				ghost		true
			}
			button icon
			{
				pos		"4 3"
				size	"19 19"
				icon	"icons/levels"
				tooltip	"_Current level"
			}
			string levelnum
			{
				string			*cvar:cl_worldlevel
				pos				"27 5"
				size			"30 25"
				font			"f_normal_bold"
				color			"0.56 0.81 0.76 1"
				longlines		LONGLINES_CHOP
				contentalign	ALIGN_CL
				ghost			true
			}

			/* Up/down arrows don't look good and
			 * don't update when max/min is hit using
			 * the up/down arrows
			button up
			{
				pos		"57 3"
				size	"18 18"
				icon	"icons/windowup"
				tooltip	"_Raise the level"
				onClick	{ cmd "lvlchange 1;" }
			}
			button down
			{
				pos		"57 21"
				size	"18 18"
				icon	"icons/windowdown"
				tooltip	"_Lower the level"
				onClick	{ cmd "lvlchange 0;" }
			}

			// Raise/lower the level
			// param1: direction (0 = down, 1 = up)
			confunc lvlchange
			{
				if (param1 eq "1") {
					if (*cvar:cl_worldlevel < *cvar:cl_maxworldlevel) {
						*cvar:cl_worldlevel = (*cvar:cl_worldlevel + 1)
					}
				} else {
					if (*cvar:cl_worldlevel > "0") {
						*cvar:cl_worldlevel = (*cvar:cl_worldlevel - 1)
					}
				}
				// Change icon if we're at top or bottom level
				if (*cvar:cl_worldlevel eq "0") {
					*node:parent.down@icon = "icons/windowdown_hovered"
					*node:parent.up@icon = "icons/windowup"
				} elif (*cvar:cl_worldlevel eq *cvar:cl_maxworldlevel) {
					*node:parent.up@icon = "icons/windowup_hovered"
					*node:parent.down@icon = "icons/windowdown"
				} else {
					*node:parent.down@icon = "icons/windowdown"
					*node:parent.up@icon = "icons/windowup"
				}
			}
			 */
		}
	}

	// End turn, options, abort mission
	panel game_controls
	{
		{
			pos			"0 0"
			size		"200 500"
			align		LAYOUTALIGN_TOPRIGHT
			ghost		true
		}

		// End turn button
		CircleBtn end_turn
		{
			{
				pos			"145 5"
			}

			button icon
			{
				icon		"icons/dblarrowrgt0"
				background	"icons/circle0"
				pos			"0 0"
				size		"48 48"
				tooltip		"_End Turn"
				onClick			{ cmd "nextround;" }
				onMouseEnter	{ *node:this@icon = "icons/dblarrowrgt" }
				onMouseLeave	{ *node:this@icon = "icons/dblarrowrgt0"	}
			}
		}

		// Options button
		CircleBtn options
		{
			{
				pos			"145 60"
			}

			button icon
			{
				icon		"icons/options0"
				background	"icons/circle0"
				pos			"0 0"
				size		"48 48"
				tooltip		"_Options"
				onClick			{ cmd "ui_push options;" }
				onMouseEnter	{ *node:this@icon = "icons/options" }
				onMouseLeave	{ *node:this@icon = "icons/options0"	}
			}
		}

		// Abort button
		CircleBtn abort
		{
			{
				pos			"145 115"
			}

			button icon
			{
				icon		"icons/abortmission0"
				background	"icons/circle0"
				pos			"0 0"
				size		"48 48"
				tooltip		"_Abort"
				onClick		{ cmd "ui_push singleplayermission;" }
				onMouseEnter	{ *node:this@icon = "icons/abortmission" }
				onMouseLeave	{ *node:this@icon = "icons/abortmission0"	}
			}
		}

		// Radar button
		CircleBtn radar
		{
			{
				pos			"145 170"
			}

			button icon
			{
				icon		"icons/radar0"
				background	"icons/circle0"
				pos			"0 0"
				size		"48 48"
				tooltip		"_Radar"
				onClick	{ cmd "ui_push radarwindow;" }
				onMouseEnter	{ *node:this@icon = "icons/radar" }
				onMouseLeave	{ *node:this@icon = "icons/radar0"	}
			}
		}

		// Chat window
		// @TODO: Add button to show chat
		// @TODO: To make it appear on MP-only, use: visiblewhen	"*cvar:sv_maxclients >= 2"
	}


	// Resets the reaction fire button when new soldier is selected
	confunc startreactionmany
	{
		*node:parent.soldier.soldier_opts.soldier_buttons.reaction.icon_off@invis = true
		*node:parent.soldier.soldier_opts.soldier_buttons.reaction.icon_single@invis = true
		*node:parent.soldier.soldier_opts.soldier_buttons.reaction.icon_on@invis = false
		*node:parent.soldier.soldier_opts.soldier_buttons.reaction.reaction_d@invis = true
	}
	confunc startreactiononce
	{
		*node:parent.soldier.soldier_opts.soldier_buttons.reaction.icon_off@invis = true
		*node:parent.soldier.soldier_opts.soldier_buttons.reaction.icon_single@invis = false
		*node:parent.soldier.soldier_opts.soldier_buttons.reaction.icon_on@invis = true
		*node:parent.soldier.soldier_opts.soldier_buttons.reaction.reaction_d@invis = true
	}
	confunc deselect_reaction
	{
		*node:parent.soldier.soldier_opts.soldier_buttons.reaction.icon_off@invis = false
		*node:parent.soldier.soldier_opts.soldier_buttons.reaction.icon_single@invis = true
		*node:parent.soldier.soldier_opts.soldier_buttons.reaction.icon_on@invis = true
		*node:parent.soldier.soldier_opts.soldier_buttons.reaction.reaction_d@invis = true
	}
	confunc disable_reaction
	{
		*node:parent.soldier.soldier_opts.soldier_buttons.reaction.reaction_d@invis = false
	}

	// Handles turning a button "on" when clicked
	// param1 = path to node from parent
	// param2 = icon image
	confunc toggle_button
	{
		if (*node:parent.soldier.soldier_opts.soldier_buttons.<1>.icon@background eq "icons/circle0") {
			*node:parent.soldier.soldier_opts.soldier_buttons.<1>.icon@icon = "icons/<2>"
			*node:parent.soldier.soldier_opts.soldier_buttons.<1>.icon@background = "icons/circle"
		} else {
			*node:parent.soldier.soldier_opts.soldier_buttons.<1>.icon@icon = "icons/<2>0"
			*node:parent.soldier.soldier_opts.soldier_buttons.<1>.icon@background = "icons/circle0"
		}
	}

	// Select the soldier from the squad selection
	confunc hudselect
	{
		*cvar:selected_soldier = <1>
		*cvar:i = 0;
		while ( *cvar:i < 8 ) {
			*node:root.soldier.squad.sld<cvar:i>@bordercolor = "0.527 0.6 0.21 1"
			*cvar:i = ( *cvar:i + 1 )
		}
		delete *cvar:i
		*node:root.soldier.squad.sld<1>@bordercolor = "0.824 0.917 0.437 1"

		// Resets the weapon display panel when soldier changes
		*cvar:sldcurhand = "l"
		cmd "switchhands;show_oweapon;"
	}

	func onWindowOpened
	{
		cmd "music_change battlescape;"

		// Input soldier information squad selection
		*cvar:i = 0;
		while ( *cvar:i < 8 ) {
			*node:root.soldier.squad.sld<cvar:i>@num = <cvar:i>
			*node:root.soldier.squad.sld<cvar:i>.head@src = *cvar:mn_head<cvar:i>
			*node:root.soldier.squad.sld<cvar:i>.health@max = *cvar:mn_hpmax<cvar:i>
			*node:root.soldier.squad.sld<cvar:i>.health@current = *cvar:mn_hp<cvar:i>
			*node:root.soldier.squad.sld<cvar:i>.tu@max = *cvar:mn_tumax<cvar:i>
			*node:root.soldier.squad.sld<cvar:i>.tu@current = *cvar:mn_tu<cvar:i>
			*node:root.soldier.squad.sld<cvar:i>.morale@max = *cvar:mn_moralemax<cvar:i>
			*node:root.soldier.squad.sld<cvar:i>.morale@current = *cvar:mn_morale<cvar:i>
			*cvar:i = ( *cvar:i + 1 )
		}
		delete *cvar:i

		// Select the current soldier and update the squad selection
		cmd "hudselect 0;"

		// Sets the attribute displayed in the squad panel bars
		*cvar:squad_bar = "health"

		// Notices when the weapon has changed and calls the confunc that
		// shows or hides the otherweapon
		cmd "ui_addcvarlistener mn_lweapon show_oweapon;"
		cmd "ui_addcvarlistener mn_rweapon show_oweapon;"
	}
}

// Inventory and stats window
window inv_stats_hud
{
	{
		pos			"236 60"
		size		"560 418"
		bgcolor		"0 0.15 0.1 0.7"
		bordercolor	"0.58 0.81 0.758 0.7"
		border		"2"
		onMouseEnter	{
			*node:this@bgcolor = "0 0.21 0.158 0.7"
			}
		onMouseLeave	{
			*node:this@bgcolor = "0 0.15 0.1 0.7"
			}
	}
	// Top bar
	string name
	{
		string			*cvar:mn_name
		pos				"8 0"
		size			"300 25"
		font			"f_small_bold"
		color			"0.56 0.81 0.76 1"
		longlines		LONGLINES_CHOP
		contentalign	ALIGN_LL
		ghost			true
	}
	string rank
	{
		string			*cvar:mn_chrrank
		pos				"8 25"
		size			"300 15"
		font			"f_verysmall"
		color			"0.56 0.81 0.76 1"
		longlines		LONGLINES_CHOP
		contentalign	ALIGN_UL
		ghost			true
	}
	controls drag
	{
		pos		"0 0"
		size	"560 40"
    }
	button close
	{
		icon			"icons/windowclose"
		tooltip			"_Close"
		pos				"530 10"
		size			"18	18"
		onClick			{ cmd "ui_pop;" }
	}
	// @TODO: make next/prev soldier btns work
	button next
	{
		icon			"icons/windownext"
		tooltip			"_Next soldier"
		pos				"506 10"
		size			"18	18"
		onClick			{ cmd "nextsoldier;" }
	}
	button prev
	{
		icon			"icons/windowprev"
		tooltip			"_Previous soldier"
		pos				"482 10"
		size			"18	18"
		onClick			{ cmd "prevsoldier;" }
	}
	// Inventory area
	image rank_img
	{
		pos 		"10 46"
		size 		"64 64"
		src 		*cvar:mn_chrrank_img
	}
	model actor
	{
		{
			src		*cvar:mn_body
			skin	*cvar:mn_body_skin
			anim	"stand_menu"
			origin	"0 -25 0"
			angles	"0 82 90"
			scale	"5 5 5"
			pos		"86 81"
			size	"191 262"
		}
		model head
		{
			src		*cvar:mn_head
			skin	*cvar:mn_head_skin
			tag		"tag_head"
			scale	"1.0 1.0 1.0"
		}
	}
	image inv_bg
	{
		pos		"10 59"
		size	"351 349"
		src		"/ui/inv_bg"
	}
	container headgear	{ pos "88 85" }
	container backpack	{ pos "236 59" }
	container right		{ pos "13 146" }
	container left		{ pos "236 146" }
	// Armour is not switchable in combat - thus no display of "container armour" needed.
	container belt		{ pos "13 204" }
	container holster	{ pos "285 204" }
	container floor		{ pos "10 282" }

	// Abilities panel
	// @TODO: Remove "mediocre" dsc text. Look at CL_ActorGetSkillString, cl_team.c
	panel abilities
	{
		{
			pos			"370 60"
			size		"180 140"
			ghost		true
		}
		StatBar strength
		{
			{
				pos		"0 0"
			}
			string label { string "_Strength" }
			bar valuebar { current *cvar:mn_vpwr }
			string valuenum { string *cvar:mn_tpwr }
		}
		StatBar speed
		{
			{
				pos		"0 35"
			}
			string label { string "_Speed" }
			bar valuebar { current *cvar:mn_vspd }
			string valuenum { string *cvar:mn_tspd }
		}
		StatBar accuracy
		{
			{
				pos		"0 70"
			}
			string label { string "_Accuracy" }
			bar valuebar { current *cvar:mn_vacc }
			string valuenum { string *cvar:mn_tacc }
		}
		StatBar mind
		{
			{
				pos		"0 105"
			}
			string label { string "_Mind" }
			bar valuebar { current *cvar:mn_vmnd }
			string valuenum { string *cvar:mn_tmnd }
		}
	}
	// Skills panel
	panel skills
	{
		{
			pos			"370 243"
			size		"180 175"
			ghost		true
		}
		StatBar cls
		{
			{
				pos		"0 0"
			}
			string label { string "_CQB" tooltip "_Close Quarters Battle" }
			bar valuebar { current *cvar:mn_vcls }
			string valuenum { string *cvar:mn_tcls }
		}
		StatBar hvy
		{
			{
				pos		"0 35"
			}
			string label { string "_Heavy" tooltip "_Heavy Weapons" }
			bar valuebar { current *cvar:mn_vhvy }
			string valuenum { string *cvar:mn_thvy }
		}
		StatBar ass
		{
			{
				pos		"0 70"
			}
			string label { string "_Assault" }
			bar valuebar { current *cvar:mn_vass }
			string valuenum { string *cvar:mn_tass }
		}
		StatBar snp
		{
			{
				pos		"0 105"
			}
			string label { string "_Sniper" }
			bar valuebar { current *cvar:mn_vsnp }
			string valuenum { string *cvar:mn_tsnp }
		}
		StatBar exp
		{
			{
				pos		"0 140"
			}
			string label { string "_Explosives" }
			bar valuebar { current *cvar:mn_vexp }
			string valuenum { string *cvar:mn_texp }
		}
	}

	// Select the next soldier
	confunc nextsoldier
	{
		if ( *cvar:selected_soldier eq "7" ) {
			cmd "hudselect 0;"
		} else {
			*cvar:next_soldier = ( *cvar:selected_soldier + 1 )
			cmd "hudselect <*cvar:next_soldier>;"
			delete *cvar:next_soldier
		}
	}
	// Select the previous soldier
	confunc prevsoldier
	{
		if ( *cvar:selected_soldier eq "0" ) {
			cmd "hudselect 7;"
		} else {
			*cvar:prev_soldier = ( *cvar:selected_soldier - 1 )
			cmd "hudselect <*cvar:prev_soldier>;"
			delete *cvar:prev_soldier
		}
	}
}
