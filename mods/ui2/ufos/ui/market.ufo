// ==================
// MARKET MENU
// ==================

/*
 * @TODO
 * - Make autosell button work properly
 */
window market  {
	{ size	"1024 768" }

	// Base name and container panel
	panel base_container
	{
		{
			pos				"5 5"
			size			"723 758"
			border			"2"
			bordercolor		"0.56 0.81 0.76 1"
		}

		// @TODO: make next/prev base btns work
		button prev
		{
			icon			"icons/windowprev"
			tooltip			"_Previous base"
			pos				"90 6"
			size			"18	18"
			onMouseEnter	{ *node:this@icon = "icons/windowprev0" }
			onMouseLeave	{ *node:this@icon = "icons/windowprev" }
			onClick			{ cmd "ui_pop; mn_base_prev;" }
		}
		button next
		{
			icon			"icons/windownext"
			tooltip			"_Next base"
			pos				"115 6"
			size			"18	18"
			onMouseEnter	{ *node:this@icon = "icons/windownext0" }
			onMouseLeave	{ *node:this@icon = "icons/windownext" }
			onClick			{ cmd "ui_pop; mn_base_next;" }
		}
		// Base name
		textentry name
		{
			string		*cvar:mn_base_title
			pos			"135 0"
			size		"465 32"
			font		"f_small_bold"
			color			"0.56 0.81 0.76 1"
			contentalign	ALIGN_CL
			onChange 	{ cmd "base_changename" } 	// stores the value of the cvar in the base structure
		}
		// Base selector
		panel base_selector
		{
			{
				pos		"440 7"
				size	"160 16"
				layout			LAYOUT_COLUMN
				layoutColumns	8
				layoutMargin	4
			}
			BaseLayoutMini base0 { baseid 0 }
			BaseLayoutMini base1 { baseid 1 }
			BaseLayoutMini base2 { baseid 2 }
			BaseLayoutMini base3 { baseid 3 }
			BaseLayoutMini base4 { baseid 4 }
			BaseLayoutMini base5 { baseid 5 }
			BaseLayoutMini base6 { baseid 6 }
			BaseLayoutMini base7 { baseid 7 }
		}
		string credits
		{
			string		*cvar:mn_credits
			pos			"600 0"
			size		"120 32"
			font		"f_small_bold"
			color			"0.56 0.81 0.76 1"
			contentalign	ALIGN_CR
		}

		// Market panel
		panel market
		{
			{
				pos				"4 30"
				size			"715 534"
				border			"2"
				bordercolor		"0.527 0.6 0.21 1"
			}
			// Title bar
			panel header
			{
				{
					pos			"1 1"
					size		"713 32"
					bgcolor		"0.527 0.6 0.21 0.2"
				}
				string title
				{
					string			"_Market"
					pos				"90 1"
					size			"593 32"
					contentalign	ALIGN_CL
					color			"0.56 0.81 0.76 1"
				}
				button back
				{
					icon			"icons/windownext"
					tooltip			"_Back to base"
					pos				"683 7"
					size			"18	18"
					onMouseEnter	{ *node:this@icon = "icons/windownext0" }
					onMouseLeave	{ *node:this@icon = "icons/windownext" }
					onClick			{ cmd "ui_pop; base_init; reset_base;" }
				}
			}
			// Market list headings (base / market)
			panel list_header
			{
				{
					pos			"0 40"
					size		"715 32"
				}
				string base
				{
					string			"_Base"
					pos				"400 0"
					size			"60 32"
					color			"0.56 0.81 0.76 1"
					contentalign	ALIGN_CR
				}
				string market
				{
					string			"_Market"
					pos				"600 0"
					size			"60 32"
					color			"0.56 0.81 0.76 1"
					contentalign	ALIGN_CL
				}
			}
			// Market items list
			panel list
			{
				{
					pos				"1 70"
					size			"713 463"
					layout			LAYOUT_TOP_DOWN_FLOW
					layoutMargin	2
				}
				data selected { string "" }
			}
		}
		// Object description panel
		ObjectInfo details
		{
			{
				pos				"4 574"
				border			"2"
				bordercolor		"0.527 0.6 0.21 1"
			}
		}
	}

	// Storage count
	BuildingSpace storage
	{
		{ pos "739 0" }

		button smlicon { icon	"icons/building_storage" }
		string label { string	"_Storage" }
		button alert { invis true }
	}

	// Shopping cart / confirm transaction window
	panel transaction
	{
		{
			pos		"739 35"
			size	"285 728"
			border			"2"
			bordercolor		"0.56 0.81 0.76 1"
		}
		string label
		{
			string			"_Transactions"
			pos				"1 1"
			size			"283 727"
			contentalign	ALIGN_CC
			color			"0.56 0.81 0.76 1"
			bgcolor			"0.56 0.81 0.76 0.3"
		}
	}

	/*
	 * @brief Confunc to clear the market list
	 */
	confunc ui_market_clear {
		call *node:root.base_container.market.list@removeAllchild
	}

	/*
	 * @brief Confunc to add the item to market's itemlist
	 * <1> reference id
	 * <2> name
	 * <3> count at base
	 * <4> count on market
	 * <5> buy price
	 * <6> sell price
	 * <7> autosell (0: off, 1: on, -: not available"
	 * <8> tooltip for disabled entries, "-" otherwise
     */
	confunc ui_market_add {
		call *node:root.base_container.market.list@createChild("item_<1>", "MarketItem")

		// Temporary implementation for layout
		*node:root.base_container.market.list.item_<1>.id@string = <1>
		*node:root.base_container.market.list.item_<1>.name@string = <2>
		*node:root.base_container.market.list.item_<1>.base@string = <3>
		*node:root.base_container.market.list.item_<1>.market@string = <4>
		// Set autosell
		if ( param7 eq "-" ) {
			*node:root.base_container.market.list.item_<1>.autosell@invis = true
		} else {
			*node:root.base_container.market.list.item_<1>.autosell@current = <7>
		}
	}

	/*
	 * @brief Select an item from the list
	 * <1> item id
	 */
	confunc ui_market_select {
		if ( *node:root.base_container.market.list.selected@string ne "" ) {
			*node:root.base_container.market.list.item_<node:root.base_container.market.list.selected@string>.name@color = "0.56 0.81 0.76 0.7"
		}
		*node:root.base_container.market.list.selected@string = <1>
		if ( *node:root.base_container.market.list.selected@string ne "" ) {
			*node:root.base_container.market.list.item_<node:root.base_container.market.list.selected@string>.name@color = "0.56 0.81 0.76 1"
			cmd "ui_market_showinfo <1>;"
		}
	}

	// ==================
	// init
	// ==================

	func onWindowOpened {
		cmd "ui_market_fill \"<cvar:ui_market_category>\";"
	}

	func onWindowClosed {

		// Call base_init so that storage data can be updated
		cmd "base_init;"
	}
}
