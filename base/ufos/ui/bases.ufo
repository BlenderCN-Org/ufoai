--!usr/bin/lua

--[[
-- @file
-- @brief base view screen
--]]

--[[
Copyright (C) 2002-2017 UFO: Alien Invasion.

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
--]]

--[[
 - @todo A lot of things here could be simplified
 - @todo Separate the base section code to Lua includes
 - @todo check these old feature requests
	* - Add injured soldiers to employee count list
	* - Icons for UFOPaedia, kill alien (aliencontainment)
	* LATER IMPROVEMENTS:
	* - Build facility: make building preview appear below each option when clicked
	* - Build facility: make building capacity (+) buttons automatically select that building type
	* - Build facility: Make the add building button turn to a warning if it is too high/low (low is for antimatter only)
--]]

require("ufox.lua")
base = {}

do
	local baseWindow = ufox.build_window({
		name = "bases",
		class = "window",
		fill = true,

		{
			name = "base_idx",
			class = "data",
			text = "",
		},

		-- Left base panel
		{
			name = "base_container",
			class = "BaseContainerPanel",

			-- @todo Can we remove this?
			{
				name = "mainBody",
				class = "panel",
				invisible = true,
			},

			{
				name = "base_map_container",
				class = "panel",
				pos = {4, 30},
				size = {715, 670},
				bordersize = 2,
				bordercolor = {0.527, 0.6, 0.21, 1},

				{
					name = "thebasemap",
					class = "basemap",
					pos = {1, 1},
					size = {715, 667},
				},
			},

			-- Employee panel
			-- @TODO: add support for injured soldiers
			{
				name = "cur_employees",
				class = "panel",
				pos = {0, 705},
				size = {490, 48},
				layout = ufo.LAYOUT_LEFT_RIGHT_FLOW,

				{
					name = "scientists",
					class = "EmployeeCount",
					tooltip = "_Scientists",

					{ name = "label", class = "string", text = "_Scientists" },
					{ name = "icon", class = "button", icon = "icons/head_scientist" },

					on_click = function (sender)
						-- @TODO ufo.push_window() doesn't support parameters
						ufo.cmd("ui_push employees 1;")
					end,
				},
				{
					name = "engineers",
					class = "EmployeeCount",
					tooltip = "_Engineers",

					{ name = "label", class = "string", text = "_Engineers" },
					{ name = "icon", class = "button", icon = "icons/head_worker" },

					on_click = function (sender)
						-- @TODO ufo.push_window() doesn't support parameters
						ufo.cmd("ui_push employees 2;")
					end,
				},
				{
					name = "soldiers",
					class = "EmployeeCount",
					tooltip = "_Soldiers",

					{ name = "label", class = "string", text = "_Soldiers" },
					{ name = "icon", class = "button", icon = "icons/head_soldier" },

					on_click = function (sender)
						-- @TODO ufo.push_window() doesn't support parameters
						ufo.cmd("ui_push employees 0;")
					end,
				},
				{
					name = "pilots",
					class = "EmployeeCount",
					tooltip = "_Pilots",

					{ name = "label", class = "string", text = "_Pilots" },
					{ name = "icon", class = "button", icon = "icons/head_pilot" },

					on_click = function (sender)
						-- @TODO ufo.push_window() doesn't support parameters
						ufo.cmd("ui_push employees 3;")
					end,
				},
			},

			-- Transfers, options, UFOpaedia
			{
				name = "buttons",
				class = "panel",
				pos = {551, 705},
				size = {224, 48},
				layout = ufo.LAYOUT_LEFT_RIGHT_FLOW,

				{
					name = "options",
					class = "button",
					size = {56, 48},
					icon = "icons/options",
					tooltip = "_Options",
					background = "icons/circle0",

					on_mouseenter = function (sender)
						sender:set_background("icons/circle")
					end,
					on_mouseleave = function (sender)
						sender:set_background("icons/circle0")
					end,
					on_click = function (sender)
						ufo.push_window("options", nil, nil)
					end,
				},
				{
					name = "ufopaedia",
					class = "button",
					size = {56, 48},
					icon = "icons/info",
					tooltip = "_UFOpedia",
					background = "icons/circle0",

					on_mouseenter = function (sender)
						sender:set_background("icons/circle")
					end,
					on_mouseleave = function (sender)
						sender:set_background("icons/circle0")
					end,
					on_click = function (sender)
						ufo.push_window("ufopedia", nil, nil)
					end,
				},
				{
					name = "transfers",
					class = "button",
					size = {56, 48},
					icon = "icons/transfer",
					tooltip = "_Transfer",
					background = "icons/circle0",

					on_mouseenter = function (sender)
						sender:set_background("icons/circle")
					end,
					on_mouseleave = function (sender)
						sender:set_background("icons/circle0")
					end,
					on_click = function (sender)
						ufo.push_window("transfer", nil, nil)
					end,
				},
			},
		},

		-- (right) main base sections
		{
			name = "sections",
			class = "panel",
			pos = {726, 5},
			size = {298, 758},
			layout = ufo.LAYOUT_TOP_DOWN_FLOW,
			layoutmargin = 2,
		},

		-- Back to geoscape
		{
			name = "geoscape_button",
			class = "Geoscape",

			on_click = function (sender)
				ufo.pop_window(false)
			end,
		},

		{
			name = "update_basebutton",
			class = "confunc",

			--[[
			 - @brief Used to enable/disable the overall base buttons
			 - @param button
			 - @param state
			 - @param tooltip
			 - @TODO: handle hospital/transfer
			 - @TODO: some buttons don't have windows
			 - @TODO: Check tooltips only show when disabled
			--]]
			on_click = function (sender, button, state, tooltip)
				local section = ""
				-- new-style sections
				local sections = {"facilities", "aircraft", "hire", "buysell", "research", "production", "containment", "hospital"}
				for i, section in ipairs(sections) do
					if (button == section) then
						local node = sender:root():child("sections"):child(section)
						if (node == nil) then
							-- ufo.print(string.format("update_basebutton section %q not found", section))
							return
						end
						if (state == "true") then
							node:disable(tooltip)
						else
							node:enable(tooltip)
						end
						return
					end
				end
			end,
		},

		{
			name = "current_employees",
			class = "confunc",

			--[[
			 - @brief Current employees of a particular base
			 - @param soldiers Number of soldiers
			 - @param pilots Number of pilots
			 - @param scientists Number of scientists
			 - @param engineers Number of engineers
			--]]
			on_click = function (sender, soldiers, pilots, scientists, engineers)
				local employee_container = sender:parent():child("base_container"):child("cur_employees")
				employee_container:child("soldiers"):child("data"):set_text(soldiers)
				employee_container:child("pilots"):child("data"):set_text(pilots)
				employee_container:child("scientists"):child("data"):set_text(scientists)
				employee_container:child("engineers"):child("data"):set_text(engineers)
			end,
		},

		{
			name = "base_next_s",
			class = "confunc",

			on_click = function (sender, last_section)
				ufo.pop_window(false)
				ufo.cmd("mn_base_next;")
			end,
		},

		{
			name = "base_prev_s",
			class = "confunc",

			on_click = function (sender, last_section)
				ufo.pop_window(false)
				ufo.cmd("mn_base_prev;")
			end,
		},

		{
			name = "base_select_s",
			class = "confunc",

			on_click = function (sender, base_idx, last_section)
				ufo.pop_window(false)
				ufo.cmd(string.format("mn_base_select %d;", base_idx))
			end,
		},

		{
			name = "overlay",
			class = "fuzzyScreen"
		},

		generate_sections = function (sender, base_idx)
			local sections = {"facilities", "aircraft", "hire", "buysell", "research", "production", "containment", "hospital"}
			for i, section in ipairs(sections) do
				require(string.format("base.%s.lua", section))
				base[section].register(sender:root():child("sections"), tonumber(base_idx))
			end
			-- Get the parameters needed for this window
			ufo.cmd("base_init;")
		end,

		on_windowactivate = function (sender)
			sender:root().generate_sections(sender:root(), sender:root():child("base_idx"):as_string())
		end,

		on_windowopened = function (sender, base_idx)
			if (base_idx == nil or base_idx == "") then
				ufo.print(string.format("UI bases: Missing base_idx parameter!\n"))
				ufo.pop_window(false)
			end
			sender:root():child("base_idx"):set_text(base_idx)
			-- generate base sections
			sender:root().generate_sections(sender:root(), sender:root():child("base_idx"):as_string())
		end,

		on_windowclosed = function (sender)
			ufo.cmd("trans_emptyairstorage;")
			sender:root():child("sections"):remove_children()
		end,
	})
end
