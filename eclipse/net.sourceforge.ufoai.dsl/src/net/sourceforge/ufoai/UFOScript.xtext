grammar net.sourceforge.ufoai.UFOScript with org.eclipse.xtext.common.Terminals

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
generate ufoScript "http://ufoai.org/UFOScript"

// starting point for parsing a ufo script file
UFOScript:
	(blocks+=UITopLevelNode)*;

/* ==================== UI TOP LEVEL NODES ================================ */
UITopLevelNode:
	UINodeComponent | UINodeWindow;

/** a window can only extend another window */
UINodeWindow:
	"window" name=ID ("extends" superWindow=[UINodeWindow])? "{"
	/* optional block with window properties that might be empty */
	("{" (properties+=[UINodeProperties])* "}")?
	/* nodes (and panels) */
	((nodes+=UINode) | (panels+=UINodePanel))* "}";

/** components can extend any ui node */
UINodeComponent:
	"component" name=ID "extends" superComponent=[UINodeComponent|UINodeType] "{" ("{"
	(properties+=UINodeProperties)* "}")? ((nodes+=UINode) | (panels+=UINodePanel))* "}";

/* ==================== NODES ================================ */
UINodeType:
	"panel" | "image" | "button" | "model" | "text" | "string" | "confunc" | "func" | "textentry";

/* panels are a little bit special */
UINodePanel:
	"panel" name=ID "{" ("{" (properties+=UIPanelProperties)* "}")? (panelNodes+=UINode)* "}";

UINode:
	UINodeImage | UINodeButton | UINodeModel | UINodeText | UINodeString | UINodeConfunc | UINodeFunc | UINodeTextEntry;

UINodeImage:
	"image" name=ID "{" (properties+=UIImageProperties)* "}";

UINodeButton:
	"button" name=ID "{" (properties+=UIButtonProperties)* "}";

UINodeModel:
	"model" name=ID "{" (properties+=UIModelProperties)* "}";

UINodeText:
	"text" name=ID "{" (properties+=UITextProperties)* "}";

UINodeString:
	"string" name=ID "{" (properties+=UIStringProperties)* "}";

UINodeConfunc:
	"confunc" name=ID "{" (statements+=UIFuncStatements)* "}";

UINodeFunc:
	"func" name=ID "{" (statements+=UIFuncStatements)* "}";

UINodeTextEntry:
	"textentry" name=ID "{" (statements+=UITextEntryProperties)* "}";

/* ==================== NODE PROPERTIES ================================ */
UIWindowNodeProperties:
	(UIAbstractNodeProperties | UIWindowNodePropertiesBase);

UIWindowNodePropertiesBase:
	("noticepos" noticepos=UIValue)
	("dragbutton" dragbutton=UIValue)
	("closebutton" closebutton=UIValue)
	("modal" modal=UIValue)
	("dropdown" dropdown=UIValue)
	("preventtypingescape" preventtypingescape=UIValue)
	("fill" fill=UIValue)
	("starlayout" starlayout=UIValue)
	("onWindowOpened" onWindowOpened=UIFuncStatements)
	("onWindowClosed" onWindowClosed=UIFuncStatements)
	("onScriptLoaded" onScriptLoaded=UIFuncStatements);

UITextEntryProperties:
	(UIAbstractNodeProperties | UITextEntryPropertiesBase);

UITextEntryPropertiesBase:
	("isPassword" isPassword=UIValue)
	("clickOutAbort" clickOutAbort=UIValue)
	("onAbort" onAbort=UIFuncStatements);

UIStringProperties:
	(UIAbstractNodeProperties | UIStringPropertiesBase);

UIStringPropertiesBase:
	("longlines" longlinesStr=UIValue);

UITextProperties:
	(UIAbstractNodeScrollabelProperties | UITextPropertiesBase);

UITextPropertiesBase:
	("lineselected" lineselected=UIValue)
	("textselected" textselected=UIValue)
	("dataid" dataid=UIValue)
	("lineheight" lineheight=UIValue)
	("tabwidth" tabwidth=UIValue)
	("longlines" longlinesText=UIValue)
	("rows" rows=UIValue)
	("lines" lines=UIValue)
	("mousefx" mousefxText=STRING);

UIModelProperties:
	(UIAbstractNodeProperties | UIModelPropertiesBase);

UIModelPropertiesBase:
	("anim" anim=UIValue)
	("angles" angles=UIValue)
	("origin" origin=UIValue)
	("omega" omega=UIValue)
	("scale" scale=UIValue)
	("tag" tag=UIValue)
	("autoscale" autoscale=UIValue)
	("rotatewithmouse" rotatewithmouse=UIValue)
	("clipoverflow" clipoverflow=UIValue)
	("skin" skin=UIValue);

UIButtonProperties:
	(UIAbstractNodeProperties | UIButtonPropertiesBase);

UIButtonPropertiesBase:
	("icon" icon=UIValue)
	("flipicon" flipicon=UIValue)
	("background" background=UIValue);

UIImageProperties:
	(UIAbstractNodeProperties | UIImagePropertiesBase);

UIImagePropertiesBase:
	("preventratio" preventratio=UIValue)
	("mousefx" mousefxImg=UIValue)
	("texh" texh=UIValue)
	("texl" texl=UIValue)
	("src" src=UIValue);

UIPanelProperties:
	(UIAbstractNodeScrollabelProperties | UIPanelPropertiesBase);

UIPanelPropertiesBase:
	("layout" layout=UIValue)
	("layoutMargin" layoutMargin=UIValue)
	("layoutColumns" layoutColumns=UIValue)
	("wheelscrollable" wheelscrollable=UIValue);

UIAbstractNodeScrollabelProperties:
	(UIAbstractNodeProperties | UIAbstractNodeScrollabelPropertiesBase);

UIAbstractNodeScrollabelPropertiesBase:
	("viewpos" viewpos=UIValue)
	("viewsize" viewsize=UIValue)
	("fullsize" fullsize=UIValue)
	("onViewChange" onViewChange=UIFuncStatements);

/* abstract node properties */
UIAbstractNodeProperties:
	UINodeCallbacks | UIAbstractNodePropertiesBase;

UIAbstractNodePropertiesBase:
	("pos" pos=UIValue)
	("size" size=UIValue)
	("width" width=UIValue)
	("height" height=UIValue)
	("left" left=UIValue)
	("top" top=UIValue)
	("indexed" indexed=UIValue)
	("invis" invis=UIValue)
	("disabled" disabled=UIValue)
	("ghost" ghost=UIValue)
	("border" border=UIValue)
	("padding" padding=UIValue)
	("bgcolor" bgcolor=UIValue)
	("bordercolor" bordercolor=UIValue)
	("align" align=UIValue)
	("num" num=UIValue)
	("tooltip" tooltip=UIValue)
	("image" image=UIValue)
	("string" string=UIValue)
	("font" font=UIValue)
	("color" color=UIValue)
	("selectcolor" selectcolor=UIValue)
	("contentalign" contentalign=UIValue)
	("visiblewhen" visiblewhen=UIValue)
	("excluderect" excluderect=UIValue);

/* abstract node callbacks */
UINodeCallbacks:
	("onClick" onClick=UIFuncStatements)
	("onRClick" onRClick=UIFuncStatements)
	("onMClick" onMClick=UIFuncStatements)
	("onWheel" onWheel=UIFuncStatements)
	("onWheelUp" onWheelUp=UIFuncStatements)
	("onWheelDown" onWheelDown=UIFuncStatements)
	("onMouseEnter" onMouseEnter=UIFuncStatements)
	("onMouseLeave" onMouseLeave=UIFuncStatements)
	("onChange" onChange=UIFuncStatements);

UINodeProperties:
	UIWindowNodePropertiesBase | UITextEntryPropertiesBase | UIStringPropertiesBase | UITextPropertiesBase |
	UIModelPropertiesBase | UIAbstractNodeScrollabelPropertiesBase | UINodeCallbacks | UIAbstractNodePropertiesBase |
	UIButtonPropertiesBase | UIImagePropertiesBase | UIPanelPropertiesBase;

/* ==================== GENERAL UI STUFF ================================ */
UIFuncStatements:
	UICvarAssignment | UINodePropertyAssignment | UIFuncIfStatement | UIFuncDeleteCvar | UICommand | UIFuncCall;

UIFuncCall:
	"call" UINodePath;

UICommand:
	"cmd" name=UFO_STRING;

UIFuncDeleteCvar:
	"delete" name=UICvar;

UICvarAssignment:
	name=UICvar "=" value=UIValue;

UINodePropertyAssignment:
	UINodePath "@" property=UINodeProperty "=" value=UIValue;

UIFuncIfStatement:
	"if" "(" conditions=UIConditionalExpressions ")" "{" statements+=UIFuncStatements "}" ("elif" "("
	conditionsElif+=UIConditionalExpressions ")" "{" statements+=UIFuncStatements "}")* ("else" "{"
	statements+=UIFuncStatements "}")?;

UIConditionalExpressions:
	conditionalorexpression=UIConditionalOrExpression;

UIConditionalOrExpression:
	conditionalandexpression+=UIConditionalAndExpression ('||' conditionalandexpression+=UIConditionalAndExpression)*;

UIConditionalAndExpression:
	equalityexpression+=UIEqualityExpression ('&&' equalityexpression+=UIEqualityExpression)*;

UIEqualityExpression:
	expression+=UIConditionalExpression (('==' | '!=') expression+=UIConditionalExpression)*;

UIConditionalExpression:
	{UIConditionalExpression} (name=UIValue comparator=UIComparator value=UIValue);

UIValue:
	UFO_STRING | INT | UIFuncParameter | UICvar;

UIFuncParameter:
	"<" INT ">";

UIComparator:
	">" | "<" | "eq" | "ne" | "!=" | "==" | "<=" | ">=";

UINodePath:
	"*node:" ((("this" ("." "parent")?) | "root") ".")? name=ID (=> '.' ID)*;

UICvar:
	"*cvar:" ID;

UINodeProperty:
	name=ID;

terminal fragment UFO_STRING_:
	('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;

terminal fragment UFO_I18N_STRING:
	'"_' UFO_STRING_ '"' | "'_" UFO_STRING_ "'";

terminal UFO_STRING:
	'"' UFO_STRING_ '"' | "'" UFO_STRING_ "'";
